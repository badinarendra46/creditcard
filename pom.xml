<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>icici</groupId>
    <artifactId>creditcard</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- The final test artifact will be an executable Jar -->
    <packaging>jar</packaging>

    <properties>
        <!-- Src -->
        <jersey.version>2.22.2</jersey.version>
        <jackson.version>2.7.2</jackson.version>
        <config.version>1.3.0</config.version>
        <lombok.version>1.16.6</lombok.version>
        <logback-classic.version>1.1.5</logback-classic.version>
        <guava.version>19.0</guava.version>
        <mybatis.version>3.3.1</mybatis.version>
        <jcommander.version>1.48</jcommander.version>
        <annotations.version>15.0</annotations.version>

        <!-- Test -->
        <jmockit.version>1.21</jmockit.version>
        <testng.version>6.9.10</testng.version>
        <assertj-core.version>3.3.0</assertj-core.version>

        <!-- Plugins -->
        <java.version>1.8</java.version>
        <maven-test-plugin.version>2.19.1</maven-test-plugin.version>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
    </properties>

    <dependencies>
        <!-- Src Dependencies -->
        <dependency>
            <!-- Use the jersey client to make HTTP requests -->
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!--
            Jackson is used to serialize/deserialize JSON
        -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${config.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
            <version>${jcommander.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <!-- jmockit must be on the class path before TestNG -->
            <groupId>org.jmockit</groupId>
            <artifactId>jmockit</artifactId>
            <version>${jmockit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
                The shade plugin is used to build an 'uber' or 'fat' jar which contains all the required dependencies.
                Once the jar is created it will be executable.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>icici.runner.TestRunner</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Update the compiler version to the correct version of Java -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Unit test plugin settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-test-plugin.version}</version>
                <configuration>
                    <groups>unit</groups>
                    <!--
                        Disable running in parellel
                        https://groups.google.com/forum/#!topic/jmockit-users/vc-7J3lIrlM
                    -->
                    <parallel>classes</parallel>
                    <threadCount>1</threadCount>
                </configuration>
            </plugin>

            <!-- Functional/Component test plugin settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-test-plugin.version}</version>
                <configuration>
                    <!-- Integration framework code has nothing to functionally test -->
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>